import pandas as pd
pd.set_option('display.float_format', lambda x: '%.2f' % x) #In this way print out the whoel number

import datetime
import numpy as np 
import copy
import seaborn as sns
import matplotlib.pyplot as plt
import openpyxl
%matplotlib inline
from pandas_datareader import data as pdr
import statsmodels.api as sm
from statsmodels import regression
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score
import scipy.optimize as sco
import statsmodels.api as sm
plt.style.use('ggplot')

##### 70-30 Portfolio, this portfolio is composed by 70% of stocks and 30% of bonds

Stock70_30=pd.read_excel(r"C:\Users\oborg\OneDrive\Desktop\DateProject2\IUSQ_DE.xlsx")
Bond70_30= pd.read_excel(r'C:\Users\oborg\OneDrive\Desktop\DateProject2\OM3H_MU.xlsx')


Opn_decimal=Stock70_30.Open/1000000
print(Opn_decimal)
Stock70_30.Open=Opn_decimal
Stock70_30.sample(10)
Cls_decimal=Stock70_30.Close/1000000
print(Cls_decimal)
Stock70_30.Close=Cls_decimal
Stock70_30.sample(10)
Stock70_30=copy.deepcopy(Stock70_30)
Stock70_30.dropna(inplace=True)
Stock70_30.sample(10)


Open_decimal=Bond70_30.Open/1000000
print(Open_decimal)
Bond70_30.Open=Open_decimal
Bond70_30.sample(10)
Close_decimal=Bond70_30.Close/1000000
print(Close_decimal)
Bond70_30.Close=Close_decimal
Bond70_30.sample(10)
Bond70_30=copy.deepcopy(Bond70_30)
Bond70_30.dropna(inplace=True)
Bond70_30.sample(10)
