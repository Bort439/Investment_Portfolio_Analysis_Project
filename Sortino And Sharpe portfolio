##### Sortino and Sharpe Ratio

avg_rtrn_S = np.mean(Stock80_20.Value - 80000)
avg_rtrn_B = np.mean(Bond80_20.Value - 20000)

print(avg_rtrn_S, avg_rtrn_B)

downside_returnsS = Stock80_20.Value[Stock80_20.Value < 0]
down_deviationS = np.std(downside_returnsS)

downside_returnsB = Bond80_20.Value[Bond80_20.Value < 0]
down_deviationB = np.std(downside_returnsB)

N = 255 #Number of trading days in a year
rf =0.042 #4,2% Treasury Rate 10 year
epsilon = 1e-6  # A small value to avoid division by zero

sortino_S = (avg_rtrn_S - rf) / (down_deviationS)
sortino_B = (avg_rtrn_B - rf) / (down_deviationB)
print(sortino_S, sortino_B)

std_devS = np.std(Stock80_20.Value-80000)
sharpeS = (avg_rtrn_S - rf) / std_devS

std_devB = np.std(Bond80_20.Value-20000)
sharpeB = (avg_rtrn_B - rf) / std_devB
print(sharpeS, sharpeB)

Portfolio_returns=((Stock80_20.Value - 80000) + (Bond80_20.Value - 20000))
print(Portfolio_returns.fillna(0))
avg_Portfolio_returns=Portfolio_returns.mean()
print(avg_Portfolio_returns)
downside_returns = Portfolio_returns[Portfolio_returns<0]

year_return = (Portfolio_returns).mean()/252 
downside_deviation = np.std(downside_returns, ddof=1)  # Use Bessel's correction by setting ddof=1
sortino_ratio = (year_return - rf) / (downside_deviation)
print('Sortino Ratio:', sortino_ratio)

std_dev = Portfolio_returns.std(ddof=1)/np.sqrt(255)  # Use Bessel's correction by setting ddof=1
print('Portfolio Standard Deviation:', std_dev)

portfolio_std_dev = Portfolio_returns.std()
sharpe_ratio = (avg_Portfolio_returns - rf) / portfolio_std_dev
print(sharpe_ratio)

Portfolio_value=Portfolio_returns+100000
print(Portfolio_value)
print('Portfolio Volatility:', std_dev//100,'%')

plt.plot(Stock80_20.Date, Portfolio_returns)
plt.plot(Stock80_20.Date, Portfolio_value)
